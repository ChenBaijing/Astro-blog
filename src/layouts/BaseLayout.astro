---
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';
import '../styles/toc.css'
const {pageTitle} = Astro.props;
---
<html lang="zh-cn">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <link rel="icon" type="image/x-icon" href="/favicon.ico">
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
        <link rel="manifest" href="/site.webmanifest">
        <title>{pageTitle}</title>
    </head>
    <body>
        <div class="background-animation">
            <div class="shape shape-1"></div>
            <div class="shape shape-2"></div>
        </div>
        <Navigation />
        <slot />
        <Footer />
    </body>
</html>

<script>
    // 保持动画状态
    document.addEventListener('astro:page-load', () => {
        const shapes = document.querySelectorAll('.shape');
        shapes.forEach((shape, index) => {
            const computedStyle = window.getComputedStyle(shape);
            const transform = computedStyle.transform;
            // 保持当前变换状态
            (shape as HTMLElement).style.transform = transform;
        });
    });
</script>

<style>

.shape {
	position: absolute;
	opacity: 0.1;
	pointer-events: none;
}

.shape-1 {
	width: 300px;
	height: 300px;
	border: 2px solid var(--accent);
	border-radius: 50%;
	top: 20%;
	left: 10%;
	animation: floatAnimation 15s ease-in-out infinite;
}

.shape-2 {
	width: 200px;
	height: 200px;
	border: 2px solid var(--accent);
	transform: rotate(45deg);
	bottom: 15%;
	right: 10%;
	animation: floatAnimation 20s ease-in-out infinite reverse;
}



@keyframes floatAnimation {
	0% {
		transform: translate(0, 0) rotate(0deg);
		opacity: 0.1;
	}
	25% {
		transform: translate(50px, 20px) rotate(90deg);
		opacity: 0.15;
	}
	50% {
		transform: translate(0, 50px) rotate(180deg);
		opacity: 0.1;
	}
	75% {
		transform: translate(-30px, 20px) rotate(270deg);
		opacity: 0.15;
	}
	100% {
		transform: translate(0, 0) rotate(360deg);
		opacity: 0.1;
	}
}

main {
    width: 100%;
    position: relative;
  }

  /* 优化动画性能 */
  .shape {
    will-change: transform;
    transform: translateZ(0);
    backface-visibility: hidden;
  }

  /* 确保背景动画在过渡期间保持可见 */
  ::view-transition-old(root),
  ::view-transition-new(root) {
    animation: none;
    mix-blend-mode: normal;
  }

  /* 自定义过渡动画 */
  ::view-transition-old(main) {
    animation: fade-out 0.5s ease-out;
  }

  ::view-transition-new(main) {
    animation: fade-in 0.5s ease-out;
  }

  @keyframes fade-out {
    from {
      opacity: 1;
      transform: translateX(0);
    }
    to {
      opacity: 0;
      transform: translateX(-2%);
    }
  }

  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateX(2%);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
</style>